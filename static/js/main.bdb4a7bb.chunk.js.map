{"version":3,"sources":["components/Form.js","components/User.js","components/Users.js","components/App.js","index.js"],"names":["genres","value","label","useStyles","makeStyles","theme","root","margin","spacing","width","form","marginBottom","marginLeft","marginRight","button","Form","props","classes","className","onSubmit","handleSubmit","autoComplete","TextField","id","variant","name","onChange","handleInputChange","values","firstName","required","lastName","type","email","select","gender","map","option","MenuItem","key","multiline","bio","Button","color","User","user","TableRow","TableCell","align","overflowX","table","minWidth","Users","users","length","Paper","Table","aria-label","TableHead","TableBody","mainContainer","maxWidth","display","flexDirection","sampleData","alignSelf","marginTop","sampleUsers","App","useState","setUsers","newUser","setNewUser","e","target","preventDefault","usersNew","push","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdb4a7bb.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst genres = [\n  {\n    value: \"Male\",\n    label: \"Male\"\n  },\n  {\n    value: \"Female\",\n    label: \"Female\"\n  },\n  {\n    value: \"Other\",\n    label: \"Other\"\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"100%\"\n    }\n  },\n  form: {\n    width: \"50%\",\n    marginBottom: 20,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nfunction Form(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.form}>\n      <form\n        className={classes.root}\n        onSubmit={props.handleSubmit}\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"First Name\"\n          variant=\"outlined\"\n          name=\"firstName\"\n          onChange={props.handleInputChange}\n          value={props.values.firstName}\n          required\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Last Name\"\n          variant=\"outlined\"\n          name=\"lastName\"\n          onChange={props.handleInputChange}\n          value={props.values.lastName}\n          required\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          name=\"email\"\n          type=\"email\"\n          onChange={props.handleInputChange}\n          value={props.values.email}\n          required\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Gender\"\n          variant=\"outlined\"\n          select\n          name=\"gender\"\n          onChange={props.handleInputChange}\n          value={props.values.gender}\n          required\n        >\n          {genres.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Bio\"\n          variant=\"outlined\"\n          multiline\n          name=\"bio\"\n          onChange={props.handleInputChange}\n          value={props.values.bio}\n          required\n        />\n        <Button \n          type=\"submit\" \n          className={classes.button} \n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register User\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction User ({ user }) {\n  return (\n    <TableRow key={user.email}>\n      <TableCell align=\"left\">{user.firstName}</TableCell>\n      <TableCell align=\"left\">{user.lastName}</TableCell>\n      <TableCell align=\"left\">{user.email}</TableCell>\n      <TableCell align=\"left\">{user.gender}</TableCell>\n      <TableCell align=\"left\">{user.bio}</TableCell>\n    </TableRow>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport User from './User';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction Users(props) {\n  const classes = useStyles();\n\n  if (props.users.length > 0) {\n    return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">First Name</TableCell>\n            <TableCell align=\"left\">Last Name</TableCell>\n            <TableCell align=\"left\">Email</TableCell>\n            <TableCell align=\"left\">Gender</TableCell>\n            <TableCell align=\"left\">Bio</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.users.map(user => (\n            <User key={user.email} user={user} />\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n    )\n  } else {\n    return <></>\n  }\n}\n\nexport default Users;","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Users from \"./Users\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    maxWidth: 1000,\n    margin: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  sampleData: {\n    alignSelf: \"center\",\n    marginTop: 20\n  }\n});\n\nconst sampleUsers = [\n  {\n    firstName: \"Kristijan\",\n    lastName: \"Jovanovski\",\n    email: \"kristijan.j92@gmail.com\",\n    gender: \"Male\",\n    bio: \"Hi, I am learning React.\"\n  },\n  {\n    firstName: \"Goce\",\n    lastName: \"Delchev\",\n    email: \"never-north@mk.com\",\n    gender: \"Male\",\n    bio: \"What did I fight for?\"\n  },\n  {\n    firstName: \"Dobrinka\",\n    lastName: \"Gjurovska\",\n    email: \"dagjure@gmail.com\",\n    gender: \"Female\",\n    bio: \"I am a crazy person!\"\n  }\n];\n\nfunction App() {\n  const classes = useStyles();\n\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    bio: \"\"\n  });\n\n  const handleInputChange = e => {\n    setNewUser({\n      ...newUser,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let usersNew = users;\n    usersNew.push(newUser);\n\n    setUsers(usersNew);\n\n    setNewUser({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      gender: \"\",\n      bio: \"\"\n    });\n  };\n\n  const loadSampleData = () => {\n    setUsers(sampleUsers);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <Form\n        handleInputChange={handleInputChange}\n        handleSubmit={handleSubmit}\n        values={newUser}\n      />\n      <Users users={users} />\n      <Button\n        className={classes.sampleData}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={loadSampleData}\n      >\n        Load Sample Data\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}